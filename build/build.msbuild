<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
      <RootDir>$(MSBuildStartupDirectory)</RootDir>
    </PropertyGroup>
    <UsingTask TaskName="DownloadNuGet" TaskFactory="CodeTaskFactory" AssemblyName="Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
       <ParameterGroup>
           <OutputFilename ParameterType="System.String" Required="true" />
       </ParameterGroup>
       <Task>
           <Reference Include="System.Core" />
           <Using Namespace="System" />
           <Using Namespace="System.IO" />
           <Using Namespace="System.Net" />
           <Using Namespace="Microsoft.Build.Framework" />
           <Using Namespace="Microsoft.Build.Utilities" />
           <Code Type="Fragment" Language="cs">
               <![CDATA[
               try {
                   OutputFilename = Path.GetFullPath(OutputFilename);

                   Log.LogMessage("Downloading latest version of NuGet.exe...");
                   WebClient webClient = new WebClient();
                   webClient.DownloadFile("https://nuget.org/nuget.exe", OutputFilename);

                   return true;
               }
               catch (Exception ex) {
                   Log.LogErrorFromException(ex);
                   return false;
               }
           ]]>
           </Code>
       </Task>
    </UsingTask>

    <Target Name="RestorePackages">
        <ItemGroup>
            <!-- Package sources used to restore packages. By default will used the registered sources under %APPDATA%\NuGet\NuGet.Config -->
            <PackageSource Include="$(NUGET_PUSH_TARGET)" Condition="'$(NUGET_PUSH_TARGET)' != ''" />
            <PackageSource Include="https://www.nuget.org/api/v2" />
            <PackageSource Include="https://www.myget.org/F/nugetbuild/" />
            <PackageSource Include="e:\git\consolidation\nupkgs" />
        </ItemGroup>
        <PropertyGroup>
            <NuGetExeDir>$(RootDir)\.nuget</NuGetExeDir>
            <NuGetExePath>$(NuGetExeDir)\nuget.exe</NuGetExePath>
            <RestoreCommand>$(NuGetExePath) restore -Source "@(PackageSource)" "@(SolutionFile)" -NonInteractive</RestoreCommand>
        </PropertyGroup>
        <MakeDir Directories="$(NuGetExeDir)" Condition="!Exists('$(NuGetExeDir)')" />
        <Message Text="Restoring packages ... " Importance="high" />
        <DownloadNuGet OutputFilename="$(NuGetExePath)" Condition=" !Exists('$(NuGetExePath)')" />
        <Exec Command="$(RestoreCommand)" LogStandardErrorAsError="true" />
    </Target>

    <Target Name="CheckForMultipleSolutions">
      <Error Text="Multiple solutions exist in $(RepositoryRoot)!" Condition="'@(SolutionFile->Count())' &gt; 1" />
    </Target>

    <ItemGroup>
      <!-- tests -->
	  <!--TestProjects Include="$(RootDir)\test\PackageManagement.Test\PackageManagement.Test.csproj" /-->
    </ItemGroup>

    <Target Name="RunTests" Condition=" '$(DisableRunningUnitTests)' != 'true' ">        
      <MsBuild Projects="@(TestProjects)" Targets="RunTests" BuildInParallel="$(BuildTestsInParallel)" />
    </Target>

    <Target Name="ReportFxCopResults">
      <ItemGroup>
        <FxCopOutputItems Include="$(RootDir)\**\*.dll.CodeAnalysisLog.xml" />
      </ItemGroup>
    </Target>

    <Target Name="Clean">
      <MSBuild Projects="$(RootDir)\NuGet.CommandLine.sln" Targets="Clean" />
    </Target>

    <ItemGroup>
      <SolutionFile Include="$(RootDir)\NuGet.CommandLine.sln" />
    </ItemGroup>

    <Target Name="BuildSln">
      <PropertyGroup>
        <EnableCodeAnalysis Condition="'$(EnableCodeAnalysis)' == ''" >true</EnableCodeAnalysis>
      </PropertyGroup>
      <MSBuild Projects="@(SolutionFile)" Targets="Build" Properties="EnableCodeAnalysis=$(EnableCodeAnalysis)" />
    </Target>

    <Target Name="Build" DependsOnTargets="Clean;CheckForMultipleSolutions;RestorePackages;BuildSln;ReportFxCopResults;RunTests" />
</Project>